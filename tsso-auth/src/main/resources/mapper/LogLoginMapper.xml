<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tinet.tsso.auth.dao.LogLoginMapper">
    <resultMap id="BaseResultMap" type="com.tinet.tsso.auth.entity.LogLogin">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR"/>
        <result column="application_id" property="applicationId" jdbcType="INTEGER"/>
        <result column="application_name" property="applicationName" jdbcType="VARCHAR"/>
        <result column="result" property="result" jdbcType="INTEGER"/>
        <result column="login_type" property="loginType" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, username, login_ip, application_id, application_name, result, login_type, 
    create_time
  </sql>
    <sql id="byParams">
        <if test="userName != null">
           and username LIKE CONCAT('%', #{userName,jdbcType=VARCHAR},'%')
        </if>
        <if test="fullName != null">
            and full_name LIKE CONCAT('%', #{fullName,jdbcType=VARCHAR},'%')
        </if>
        <if test="startTime != null and endTime != null">
             and create_time BETWEEN  #{startTime,jdbcType=DATE}  AND  #{endTime,jdbcType=DATE}
        </if>
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from log_login
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.tinet.tsso.auth.entity.LogLogin">
    insert into log_login (id, user_id, username, 
      login_ip, application_id, application_name, 
      result, login_type, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{applicationId,jdbcType=INTEGER}, #{applicationName,jdbcType=VARCHAR}, 
      #{result,jdbcType=INTEGER}, #{loginType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.tinet.tsso.auth.entity.LogLogin">
        insert into log_login
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="loginIp != null">
                login_ip,
            </if>
            <if test="applicationId != null">
                application_id,
            </if>
            <if test="applicationName != null">
                application_name,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="loginType != null">
                login_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="loginIp != null">
                #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="applicationId != null">
                #{applicationId,jdbcType=INTEGER},
            </if>
            <if test="applicationName != null">
                #{applicationName,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                #{result,jdbcType=INTEGER},
            </if>
            <if test="loginType != null">
                #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tinet.tsso.auth.entity.LogLogin">
        update log_login
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="applicationId != null">
                application_id = #{applicationId,jdbcType=INTEGER},
            </if>
            <if test="applicationName != null">
                application_name = #{applicationName,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=INTEGER},
            </if>
            <if test="loginType != null">
                login_type = #{loginType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tinet.tsso.auth.entity.LogLogin">
    update log_login
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      application_id = #{applicationId,jdbcType=INTEGER},
      application_name = #{applicationName,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      login_type = #{loginType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectCountByParam" parameterType="com.tinet.tsso.auth.param.LogLoginParam"
            resultType="java.lang.Integer">
        SELECT count(*)
        from log_login
        where 1=1
        <include refid="byParams"/>
    </select>
    <select id="selectByParam" parameterType="com.tinet.tsso.auth.param.LogLoginParam" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from log_login
        where 1=1
        <include refid="byParams"/>
        <if test="start != null and limit != null">
            offset #{start, jdbcType=INTEGER} limit #{limit,
			jdbcType=INTEGER}
        </if>
    </select>
</mapper>