<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tinet.tsso.auth.dao.PermissionMapper">
	<resultMap id="BaseResultMap" type="com.tinet.tsso.auth.entity.Permission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="key" property="key" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="application_id" property="applicationId"
			jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<association property="application"
			javaType="com.tinet.tsso.auth.entity.Application">
			<id column="application_id" property="id" />
			<result column="application_name" property="name" />
			<result column="application_key" property="key" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		permission.id,permission.key,permission.name,
		application_id,permission.create_time
	</sql>

	<sql id="byParams">
		<if test="id != null">
			and department.id = #{id, jdbcType=INTEGER}
		</if>
		<if test=" key != null ">
			and permission.key LIKE CONCAT('%',
			#{key,jdbcType=VARCHAR},'%')
		</if>
		<if test="applicationId != null">
			and application_id = #{applicationId, jdbcType=INTEGER}
		</if>
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,application.name as application_name,application.key as
		application_key
		from permission left join application on permission.application_id=
		application.id
		where permission.id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from permission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tinet.tsso.auth.entity.Permission">
		insert into permission (id, key, name,
		application_id, create_time)
		values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{applicationId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.tinet.tsso.auth.entity.Permission"
		useGeneratedKeys="true" keyProperty="id">
		insert into permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="key != null">
				key,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="applicationId != null">
				application_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="key != null">
				#{key,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="applicationId != null">
				#{applicationId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tinet.tsso.auth.entity.Permission">
		update permission
		<set>
			<if test="key != null">
				key = #{key,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="applicationId != null">
				application_id = #{applicationId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tinet.tsso.auth.entity.Permission">
		update permission
		set key = #{key,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		application_id = #{applicationId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectCountByParam" parameterType="com.tinet.tsso.auth.param.PermissionParam"
		resultType="java.lang.Integer">
		select count(*)
		from "permission"
		<if test="roleId != null">
			LEFT JOIN role_permission on "permission"."id"
			=role_permission.permission_id
		</if>
		where 1=1
		<include refid="byParams" />
		<if test="roleId != null">
			and role_id = #{roleId,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="selectByParam" parameterType="com.tinet.tsso.auth.param.PermissionParam"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,application.name as application_name,application.key as
		application_key
		from permission left join application on
		permission.application_id= application.id
		<if test="roleId != null">
			LEFT JOIN role_permission on "permission"."id"
			=role_permission.permission_id
		</if>
		where 1=1
		<include refid="byParams" />
		<if test="roleId != null">
			and role_id = #{roleId,jdbcType=VARCHAR}
		</if>
		order by permission.key asc
		<if test="start != null and limit != null">
			offset #{start, jdbcType=INTEGER} limit #{limit,
			jdbcType=INTEGER}
		</if>

	</select>
	<select id="selectByPermissionKey" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from "permission"
		where key =
		#{key,jdbcType=VARCHAR}
	</select>
	<delete id="deleteRoleForPermission" parameterType="java.lang.Integer">
		delete from
		role_permission
		where permission_id = #{permissionId,jdbcType=INTEGER}
	</delete>
</mapper>