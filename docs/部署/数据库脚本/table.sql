-- Table: application-- DROP TABLE application;CREATE TABLE application(  id serial NOT NULL, -- 主键  key character varying(50) NOT NULL, -- 系统标识  name character varying(50) NOT NULL, -- 系统名  status integer DEFAULT 1, -- 状态：1-启用，0-禁用  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT application_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE application OWNER TO postgres;COMMENT ON TABLE application IS '应用表';COMMENT ON COLUMN application.id IS '主键';COMMENT ON COLUMN application.key IS '系统标识';COMMENT ON COLUMN application.name IS '系统名';COMMENT ON COLUMN application.status IS '状态：1-启用，0-禁用';COMMENT ON COLUMN application.create_time IS '创建时间';-- Table: department-- DROP TABLE department;CREATE TABLE department(  id serial NOT NULL,  name character varying(50) NOT NULL, -- 部门名称  create_time timestamp with time zone DEFAULT now(), -- 创建时间  CONSTRAINT department_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE department OWNER TO postgres;COMMENT ON TABLE department IS '部门表';COMMENT ON COLUMN department.name IS '部门名称';COMMENT ON COLUMN department.create_time IS '创建时间';-- Table: permission-- DROP TABLE permission;CREATE TABLE permission(  id serial NOT NULL, -- 权限表主键  key character varying(50) NOT NULL, -- 权限标识  name character varying(50) NOT NULL, -- 权限名  application_id integer NOT NULL, -- 所属应用id  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT permission_pkey PRIMARY KEY (id),  CONSTRAINT permission_application_id_fkey FOREIGN KEY (application_id)      REFERENCES application (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION)WITH (  OIDS=FALSE);ALTER TABLE permission OWNER TO postgres;COMMENT ON TABLE permission IS '权限表';COMMENT ON COLUMN permission.id IS '权限表主键';COMMENT ON COLUMN permission.key IS '权限标识';COMMENT ON COLUMN permission.name IS '权限名';COMMENT ON COLUMN permission.application_id IS '所属应用id';COMMENT ON COLUMN permission.create_time IS '创建时间';-- Table: role-- DROP TABLE role;CREATE TABLE role(  id serial NOT NULL, -- 角色主键  key character varying(50) NOT NULL, -- 角色标识  name character varying(50), -- 角色名  status integer DEFAULT 1, -- 状态：1-启用，0-禁用  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT role_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE role OWNER TO postgres;COMMENT ON TABLE role IS '角色表';COMMENT ON COLUMN role.id IS '角色主键';COMMENT ON COLUMN role.key IS '角色标识';COMMENT ON COLUMN role.name IS '角色名';COMMENT ON COLUMN role.status IS '状态：1-启用，0-禁用';COMMENT ON COLUMN role.create_time IS '创建时间';-- Table: "user"-- DROP TABLE "user";CREATE TABLE "user"(  id serial NOT NULL,  username character varying(50) NOT NULL, -- 用户名  password character varying(100) NOT NULL, -- 用户密码  password_salt character varying(15) NOT NULL, -- 密码的盐  full_name character varying(50) NOT NULL, -- 用户姓名  department_id integer DEFAULT 0, -- 部门id  email character varying(50) DEFAULT NULL::character varying, -- 用户邮箱  status integer DEFAULT 1, -- 状态：1-启用，0-禁用  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT user_pkey PRIMARY KEY (id),  CONSTRAINT user_department_id_fkey FOREIGN KEY (department_id)      REFERENCES department (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION)WITH (  OIDS=FALSE);ALTER TABLE "user" OWNER TO postgres;COMMENT ON TABLE "user" IS '用户表';COMMENT ON COLUMN "user".username IS '用户名';COMMENT ON COLUMN "user".password IS '用户密码';COMMENT ON COLUMN "user".password_salt IS '密码的盐';COMMENT ON COLUMN "user".full_name IS '用户姓名';COMMENT ON COLUMN "user".department_id IS '部门id';COMMENT ON COLUMN "user".email IS '用户邮箱';COMMENT ON COLUMN "user".status IS '状态：1-启用，0-禁用';COMMENT ON COLUMN "user".create_time IS '创建时间';-- Table: user_role-- DROP TABLE user_role;CREATE TABLE user_role(  id serial NOT NULL, -- 用户-角色关联表主键  role_id integer NOT NULL, -- 角色id  user_id integer NOT NULL, -- 用户名  create_time timestamp with time zone DEFAULT now(), -- 创建时间  CONSTRAINT user_role_pkey PRIMARY KEY (id),  CONSTRAINT user_role_role_id_fkey FOREIGN KEY (role_id)      REFERENCES role (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION,  CONSTRAINT user_role_user_id_fkey FOREIGN KEY (user_id)      REFERENCES "user" (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION)WITH (  OIDS=FALSE);ALTER TABLE user_role OWNER TO postgres;COMMENT ON TABLE user_role IS '用户角色关联表';COMMENT ON COLUMN user_role.id IS '用户-角色关联表主键';COMMENT ON COLUMN user_role.role_id IS '角色id';COMMENT ON COLUMN user_role.user_id IS '用户名';COMMENT ON COLUMN user_role.create_time IS '创建时间';-- Table: role_permission-- DROP TABLE role_permission;CREATE TABLE role_permission(  id serial NOT NULL,  role_id integer NOT NULL, -- 角色id  permission_id integer NOT NULL, -- 权限id  create_time timestamp with time zone DEFAULT now(), -- 创建时间  CONSTRAINT role_permission_pkey PRIMARY KEY (id),  CONSTRAINT role_permission_permission_id_fkey FOREIGN KEY (permission_id)      REFERENCES permission (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION,  CONSTRAINT role_permission_role_id_fkey FOREIGN KEY (role_id)      REFERENCES role (id) MATCH SIMPLE      ON UPDATE NO ACTION ON DELETE NO ACTION)WITH (  OIDS=FALSE);ALTER TABLE role_permission OWNER TO postgres;COMMENT ON TABLE role_permission IS '角色权限关联表';COMMENT ON COLUMN role_permission.role_id IS '角色id';COMMENT ON COLUMN role_permission.permission_id IS '权限id';COMMENT ON COLUMN role_permission.create_time IS '创建时间';-- Table: setting-- DROP TABLE setting;CREATE TABLE setting(  id serial NOT NULL, -- 主键  key character varying(50) NOT NULL, -- 设置名  value character varying(50) NOT NULL, -- 设置值  property character varying, -- 描述  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT setting_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE setting OWNER TO postgres;COMMENT ON TABLE setting IS '系统设置表';COMMENT ON COLUMN setting.id IS '主键';COMMENT ON COLUMN setting.key IS '设置名';COMMENT ON COLUMN setting.value IS '设置值';COMMENT ON COLUMN setting.property IS '描述';COMMENT ON COLUMN setting.create_time IS '创建时间';-- Table: log_action-- -- Table: log_action-- DROP TABLE log_action;CREATE TABLE log_action(  id serial NOT NULL,  user_id integer NOT NULL, -- 用户id  username character varying(50) NOT NULL, -- 操作人帐号  full_name character varying(50) NOT NULL, -- 操作人姓名  operate_desc character varying, -- 操作描述  operate_object character varying NOT NULL, -- 操作对象  result integer DEFAULT 1, -- 操作结果： 0-失败，1-成功  operate_time timestamp(6) with time zone DEFAULT now(), -- 操作时间  CONSTRAINT log_action_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE log_action OWNER TO postgres;COMMENT ON TABLE log_action IS '操作日志表';COMMENT ON COLUMN log_action.user_id IS '用户id';COMMENT ON COLUMN log_action.username IS '操作人帐号';COMMENT ON COLUMN log_action.full_name IS '操作人姓名';COMMENT ON COLUMN log_action.operate_desc IS '操作描述';COMMENT ON COLUMN log_action.operate_object IS '操作对象';COMMENT ON COLUMN log_action.result IS '操作结果： 0-失败，1-成功';COMMENT ON COLUMN log_action.operate_time IS '操作时间';-- Table: log_login-- DROP TABLE log_login;CREATE TABLE log_login(  id serial NOT NULL,  user_id integer NOT NULL, -- 用户id  username character varying(50) NOT NULL, -- 登录账号  full_name character varying(50) NOT NULL, -- 登录用户姓名  login_ip character varying(30) NOT NULL, -- 登录ip  application_id integer NOT NULL, -- 应用id  application_name character varying(50) NOT NULL, -- 应用名  result integer DEFAULT 1, -- 登入登出结果：1-成功，0-失败  login_type integer NOT NULL, -- 登录类型：1-login 2-logout  create_time timestamp(6) with time zone DEFAULT now(), -- 创建时间  CONSTRAINT log_login_pkey PRIMARY KEY (id))WITH (  OIDS=FALSE);ALTER TABLE log_login OWNER TO postgres;COMMENT ON TABLE log_login IS '登录日志表';COMMENT ON COLUMN log_login.user_id IS '用户id';COMMENT ON COLUMN log_login.username IS '登录账号';COMMENT ON COLUMN log_login.full_name IS '登录用户姓名';COMMENT ON COLUMN log_login.login_ip IS '登录ip';COMMENT ON COLUMN log_login.application_id IS '应用id';COMMENT ON COLUMN log_login.application_name IS '应用名';COMMENT ON COLUMN log_login.result IS '登入登出结果：1-成功，0-失败';COMMENT ON COLUMN log_login.login_type IS '登录类型：1-login 2-logout';COMMENT ON COLUMN log_login.create_time IS '创建时间';alter table "user" add COLUMN department_ids int[];alter table "user" drop constraint "user_department_id_fkey";update "user" set department_ids = department_ids||department_id;COMMENT ON COLUMN public."user".department_ids IS '所属部门';alter table "user" drop column department_id;alter TABLE "user" add column mobile varchar(22);COMMENT ON COLUMN public."user".mobile IS '手机号';alter TABLE "user" add column parent_id int4;COMMENT ON COLUMN public."user".parent_id IS '直属经理';alter table application add column domain_name character VARYING(255);COMMENT ON COLUMN public.application.domain_name IS '应用域名';